/*
 * library
 */
#tm {
  
  .user-select(@value) {
    -webkit-user-select: @value;
       -moz-user-select: @value;
         -o-user-select: @value;
        -ms-user-select: @value;
            user-select: @value;
  }
  
  .transition(@value) {
    -webkit-transition: @value;
       -moz-transition: @value;
         -o-transition: @value;
        -ms-transition: @value;
            transition: @value;
  }
  
  .gloss-filter(@color) {
    background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.1) 51%, rgba(255, 255, 255, 0.2) 100%), @color;
    background:    -moz-linear-gradient(top, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.1) 51%, rgba(255, 255, 255, 0.2) 100%), @color;
    background:      -o-linear-gradient(top, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.1) 51%, rgba(255, 255, 255, 0.2) 100%), @color;
    background:     -ms-linear-gradient(top, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.1) 51%, rgba(255, 255, 255, 0.2) 100%), @color;
    background:         linear-gradient(top, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.1) 51%, rgba(255, 255, 255, 0.2) 100%), @color;
  }
  
  .gloss-filter(white) {
    .gloss-filter(darken(white, 20%));
  }
  
  /*
   * #tm .button
   * @param   {color} @color    テキストの色
   * @param   {color} @bg-color 背景色
   * @param   {size}  @width    幅
   * @param   {size}  @height   高さ
   */
  .button(@color, @bg-color, @width, @height) {
    // ボックス
    width: @width;
    height: @height;
    border: 1px solid #aaa;
    background-color: @bg-color;
    
    // テキスト
    color: @color;
    text-align: center;
    line-height: @height;
    font-size: @height*0.5;
    
    // 見た目のブラッシュアップ
    border-radius: 5px;
    text-shadow: 1px 1px 2px #aaa;
    box-shadow:
      inset 0px 1px 4px 0px #fff,
      1px 2px 1px 0px #444;
    .gloss-filter(@bg-color);
    
    // その他
    .transition(100ms);
    .user-select(none);
    cursor: pointer;
    
    // 擬似クラス
    &:hover {
      box-shadow:
        inset 0px 1px 4px 0px #fff,
        1px 2px 4px 0px #222;
    }
    
    &:active {
      box-shadow:
        inset 0px 1px 2px 1px #444;
    }
  }
  
}

/*
 * main
 */

body {
  font-family: "Meiryo", "メイリオ", "ヒラギノ角ゴ Pro W3", sans-serif;
}

h1 {
  font-size: 16px;
}

div[class|=button] {
  //float: left;
  margin: 10px;
}

@button-width: 128px;
@button-height: 32px;

.button-red {
  #tm .button(white, hsl(0, 80%, 50%), @button-width, @button-height);
}

.button-yellow {
  #tm .button(black, hsl(60, 80%, 50%), @button-width, @button-height);
}

.button-green {
  #tm .button(white, hsl(120, 80%, 50%), @button-width, @button-height);
}

.button-cyan {
  #tm .button(white, hsl(180, 80%, 50%), @button-width, @button-height);
}

.button-blue {
  #tm .button(white, hsl(240, 80%, 50%), @button-width, @button-height);
}

.button-purple {
  #tm .button(white, hsl(300, 80%, 50%), @button-width, @button-height);
}

.button-white {
  #tm .button(black, white, @button-width, @button-height);
}

.button-black {
  #tm .button(white, black, @button-width, @button-height);
}
